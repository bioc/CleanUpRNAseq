% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_DNA_contamination.R
\name{check_expressed_gene_percentage}
\alias{check_expressed_gene_percentage}
\title{Check the percentage of genes with counts greater than minimal CPM}
\usage{
check_expressed_gene_percentage(
  metadata = data.frame(sample_name = vector(mode = "character"), group = vector(mode =
    "character")),
  counts = NULL,
  min_cpm = 1,
  abundance = NULL,
  min_tpm = 1
)
}
\arguments{
\item{metadata}{A data frame with column names: sample_name, and group.
The \emph{sample_name} and \emph{group} columns contain the unique sample labels,
and the experimental conditions for each sample. The order of the two
columns doesn't matter.}

\item{counts}{A numeric matrix or data frame containing gene expression count
data for an RNA-seq experiment, with row names for gene ID and column names
for sample names. If values are not integers, it will be rounded.}

\item{min_cpm}{A numeric(1), minimal CPM threshold.}

\item{abundance}{A numeric matrix or data frame containing gene expression
data in TPM. for an RNA-seq experiment, with row names for gene ID and
column names for sample names. It can be the sublist of the \code{\link[=salmon_res]{salmon_res()}}
output.}

\item{min_tpm}{A numeric(1), minimal TPM threshold.}
}
\value{
A ggplot object if \code{counts} is not \code{NULL}, showing percentages of
genes with counts above the user-specified minimal CPM (count per million)
in each sample. Or a ggplot object of two panels if both \code{counts} and
\code{abundance} are not \code{NULL}, showing percentages of genes  with counts
above the user-specified minimal CPM and minimal TPM (transcript per
million) in each sample.

A ggplot object.
}
\description{
Check the percentage of genes with counts greater than minimal CPM
}
\details{
The axis title contains unicode, so please output the plot in the svg format
using the svglite package, instead of \code{\link[grDevices:pdf]{grDevices::pdf()}}, for high-
resolution plot.
}
\examples{
tmp_dir <- tempdir()
options(timeout = max(3000, getOption("timeout")))
## download feaureCounts results
count_url <- paste0(
    "https://zenodo.org/records/11458839/files/",
    "read_count_summary.RData?download=1"
)
download.file(
    url = count_url,
    destfile = file.path(tmp_dir, "read_count_summary.RData"),
    mode = "wb"
)
load(file.path(tmp_dir, "read_count_summary.RData"))

p <- check_expressed_gene_percentage(
    metadata = counts_summary$metadata,
    counts = counts_summary$gtf$counts,
    min_cpm = 1
)
p
}
