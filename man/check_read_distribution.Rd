% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_DNA_contamination.R
\name{check_read_distribution}
\alias{check_read_distribution}
\title{Check reads distribution over different types of genomic features}
\usage{
check_read_distribution(
  featurecounts_list = NULL,
  metadata = data.frame(sample_name = vector(mode = "character"), group = vector(mode =
    "character"))
)
}
\arguments{
\item{featurecounts_list}{A list of lists, containing output of the
\code{\link[=summarize_reads]{summarize_reads()}} function.}

\item{metadata}{A data frame with column names: sample_name and group for
sample names and experimental groups for each sample, respectively.}
}
\value{
A list of two elements.
\describe{
\item{p}{A ggplot object, showing percentages of fragments assigned to
different genomic features, such as genic regions, intergenic regions,
exonic regions, intronic regions, rRNA genes, mitochondrial genome,
chloroplast genome (only for plants)}
\item{IR_rate}{a data frame containing the percentages of reads mapping to
intergenic regions, which can be used for the "IR\%" method for correcting
for gDNA contamination}
}
}
\description{
Generate plots showing percentages of fragments assigned to different
genomic features.
}
\examples{
options(timeout = max(3000, getOption("timeout")))
cache_env <- getOption("cache_env")
if (!exists("tmp_dir", envir = cache_env)) {
    cache_env$tmp_dir <- tempdir()
}
tmp_dir <- cache_env$tmp_dir

## download feaureCounts results
if (!exists("counts_summary", envir = cache_env)) {
    count_url <- paste0(
        "https://zenodo.org/records/11458839/files/",
        "read_count_summary.RData?download=1"
    )
    retry_download({download.file(
        url = count_url,
        destfile = file.path(tmp_dir, "read_count_summary.RData"),
        mode = "wb"
    )})
    load(file.path(tmp_dir, "read_count_summary.RData"))
    cache_env$counts_summary <- counts_summary
}
counts_summary <- cache_env$counts_summary
metadata <- counts_summary$metadata
counts_summary$metadata <- NULL
p <- check_read_distribution(
    featurecounts_list = counts_summary,
    metadata = metadata
)
p$p

}
