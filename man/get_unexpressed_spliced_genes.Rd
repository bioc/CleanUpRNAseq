% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_unexpressed_genes.R
\name{get_unexpressed_spliced_genes}
\alias{get_unexpressed_spliced_genes}
\title{Determine genes which are spliced, but not supported by junction reads}
\usage{
get_unexpressed_spliced_genes(
  ensdb_sqlite = NULL,
  junction_counts = NULL,
  min_junction_counts = 1,
  min_samples = 1
)
}
\arguments{
\item{ensdb_sqlite}{An \link[ensembldb:EnsDb-class]{ensembldb::EnsDb} object or a character(1),
specifying a path to an SQLite database  for an \link[ensembldb:EnsDb-class]{ensembldb::EnsDb}
object.}

\item{junction_counts}{A data frame or matrix containing junction counts for
all samples of interest generated by \code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}} with a GTF
file as annotation.}

\item{min_junction_counts}{An integer(1), minimal number of junction read
counts needed to consider a multi-exonic gene is expressed.}

\item{min_samples}{An integer(1), minimal number of samples needed to
consider a multi-exonic gene of \code{min_junction_counts} is expressed.}
}
\value{
A character vector of IDs of multi-exonic genes which are not
supported by a minimal number of junction reads in minimal number of
samples.
}
\description{
If genes are spliced, but not supported by junction reads, they are
considered as not expressed and the other reads are likely due to DNA
contamination. This function should be used with great caution because some
libraries might have poor representation of junction reads. Please visualize
the BAM files in a genome browser, like IGV first, to get a sense of the
data.
}
\examples{
if (interactive()) {
options(timeout = max(3000, getOption("timeout")))
tmp_dir <- tempdir()
## download feaureCounts results
count_url <- paste0(
    "https://zenodo.org/records/11458839/files/",
    "read_count_summary.RData?download=1"
)
retry_download({download.file(
    url = count_url,
    destfile = file.path(tmp_dir, "read_count_summary.RData"),
    mode = "wb"
)})
load(file.path(tmp_dir, "read_count_summary.RData"))

# download the EnsDb SQLite database
ensdb_url <- paste0(
    "https://zenodo.org/records/11458839/files/",
    "GRCh38.V110.ensdb.sqlite.zip?download=1"
)
retry_download({download.file(
    url = ensdb_url,
    destfile = file.path(tmp_dir, "GRCh38.V110.ensdb.sqlite.zip"),
    mode = "wb"
)})
unzip(file.path(tmp_dir, "GRCh38.V110.ensdb.sqlite.zip"),
    exdir = tmp_dir
)
hs_ensdb_sqlite <- file.path(tmp_dir, "GRCh38.V110.ensdb.sqlite")

unexpressed_spliced_genes <-
    get_unexpressed_spliced_genes(
        ensdb_sqlite = hs_ensdb_sqlite,
        junction_counts =
            counts_summary$gtf$counts_junction,
        min_junction_counts = 1,
        min_samples = 1
    )
}
}
