% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exploratory_analysis.R
\name{exploratory_analysis}
\alias{exploratory_analysis}
\title{Exploratory analysis of RNA-seq data}
\usage{
exploratory_analysis(
  counts = NULL,
  metadata = data.frame(sample_name = vector(mode = "character"), group = vector(mode =
    "character"))
)
}
\arguments{
\item{counts}{A numeric matrix of data frame containing gene expression count
data for an RNA-seq experiment, with row names for gene ID and column names
for sample names. If values are not integers, it will be rounded.}

\item{metadata}{A data frame with column names: sample_name and group for
sample names and experimental groups for each sample, respectively. The
order of the sample name in the rows must match those in the count table
specified by \code{counts}.}
}
\value{
A list of a ggplot object and a \code{\link[gtable:gtable]{gtable::gtable()}} object.
\describe{
\item{pca}{A \emph{ggplot} object containing the PCA score plot showing sample
similarity}
\item{heatmap}{A \emph{gtable} object containing the heatmap showing
pairwise sample distances}
}
}
\description{
Perform sample-level exploratory analysis of RNA-seq data, generating heatmap
showing sample distances and PCA plot showing sample variations. Internally,
DESeq2 is used for vst transformation of count data.
}
\examples{
\dontrun{
library(patchwork)
options(timeout = max(3000, getOption("timeout")))
tmp_dir <- tempdir()
## download feaureCounts results
count_url <- paste0("https://www.dropbox.com/scl/fi/lyvh6bsljnqxtq85nnugq/",
           "read_count_summary.RData?rlkey=e0tmpehpxtnr1fdx4fz0h8sa0&dl=1")
download.file(url= count_url,
              destfile = file.path(tmp_dir, "read_count_summary.RData"),
              mode = "wb")
load(file.path(tmp_dir, "read_count_summary.RData"))

metadata <- counts_summary$metadata
metadata$group <- gsub("CD1A\\\\(-\\\\)", "CD1AN", metadata$group)
metadata$group <- gsub("CD1A\\\\(\\\\+\\\\)", "CD1AP", metadata$group)
p <- exploratory_analysis(counts = counts_summary$gtf$counts,
                          metadata = metadata)
p$heatmap <- as.ggplot(p$heatmap)
wrap_plots(p, nrow = 2, ncol = 1, widths =5, heights = 9)
}
}
